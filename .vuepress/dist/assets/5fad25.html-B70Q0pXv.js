import{_ as s,c as a,e as p,o as t}from"./app-DVyU65El.js";const e={};function l(c,n){return t(),a("div",null,n[0]||(n[0]=[p(`<h2 id="定义" tabindex="-1"><a class="header-anchor" href="#定义"><span><strong>定义</strong></span></a></h2><p>PyTorch的tensor参数可以自动扩展其大小。一般的是小一点的会变大，来满足运算需求。</p><h2 id="规则" tabindex="-1"><a class="header-anchor" href="#规则"><span><strong>规则</strong></span></a></h2><p>满足一下情况的tensor是可以广播的。</p><ul><li>至少有一个维度</li><li>两个tensor维度相等</li><li>维度不等，其中一个为1</li><li>维度不等，其中一个维度不存在</li></ul><p>计算过程规则。</p><ul><li>维度不同，小维度的增加维度</li><li>每个维度，计算结果取大的</li><li>扩展维度是对数值进行复制</li></ul><h2 id="例子" tabindex="-1"><a class="header-anchor" href="#例子"><span><strong>例子</strong></span></a></h2><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 广播机制</span></span>
<span class="line">a <span class="token operator">=</span> torch<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">b <span class="token operator">=</span> torch<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token operator">+</span> b<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">tensor<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>,</span>
<span class="line">        <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>,</span>
<span class="line">        <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">tensor<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span>, <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">-----------------------</span>
<span class="line">tensor<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span>, <span class="token number">1</span><span class="token punctuation">]</span>,</span>
<span class="line">        <span class="token punctuation">[</span><span class="token number">1</span>, <span class="token number">2</span><span class="token punctuation">]</span>,</span>
<span class="line">        <span class="token punctuation">[</span><span class="token number">2</span>, <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11)]))}const i=s(e,[["render",l],["__file","5fad25.html.vue"]]),u=JSON.parse('{"path":"/pages/5fad25.html","title":"PyTorch广播机制","lang":"en-US","frontmatter":{"title":"PyTorch广播机制","date":"2022/05/12","permalink":"/pages/5fad25.html","categories":["posts"],"tags":["posts"]},"headers":[{"level":2,"title":"定义","slug":"定义","link":"#定义","children":[]},{"level":2,"title":"规则","slug":"规则","link":"#规则","children":[]},{"level":2,"title":"例子","slug":"例子","link":"#例子","children":[]}],"git":{"createdTime":1732191603000,"updatedTime":1732191603000,"contributors":[{"name":"Ghlerrix","email":"Ghlerrix@outlook.com","commits":1}]},"filePathRelative":"blogs/posts/PyTorch广播机制.md"}');export{i as comp,u as data};

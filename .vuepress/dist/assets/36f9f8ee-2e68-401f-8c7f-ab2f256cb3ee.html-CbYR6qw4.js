import{_ as t,c as e,a as s,b as a,d as o,e as c,o as l,r as i}from"./app-DVyU65El.js";const u={},k={href:"https://www.qixinbo.info/2020/02/15/kaggle-steel/",target:"_blank",rel:"noopener noreferrer"};function r(d,n){const p=i("ExternalLinkIcon");return l(),e("div",null,[n[2]||(n[2]=s("h2",{id:"简介",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#简介"},[s("span",null,"简介")])],-1)),s("p",null,[n[1]||(n[1]=a("Kaggle上的钢板表面缺陷检测数据集Severstal给的是一个csv格式的标注文件，不是一般的coco或者voc格式。这里给出将其转为coco格式的代码。对于数据集的分析可以参考这篇文章：")),s("a",k,[n[0]||(n[0]=a("https://www.qixinbo.info/2020/02/15/kaggle-steel/")),o(p)])]),n[3]||(n[3]=c(`<h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码"><span>代码</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># %%</span></span>
<span class="line"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np</span>
<span class="line"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd</span>
<span class="line"><span class="token keyword">import</span> os<span class="token punctuation">,</span> cv2<span class="token punctuation">,</span> json<span class="token punctuation">,</span> random<span class="token punctuation">,</span> shutil</span>
<span class="line"><span class="token keyword">from</span> collections <span class="token keyword">import</span> defaultdict</span>
<span class="line"><span class="token keyword">from</span> pycocotools<span class="token punctuation">.</span>coco <span class="token keyword">import</span> COCO</span>
<span class="line"><span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image</span>
<span class="line"></span>
<span class="line"><span class="token comment"># %% [markdown]</span></span>
<span class="line"><span class="token comment"># # 读取数据</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># %%</span></span>
<span class="line">train_df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&quot;train.csv&quot;</span><span class="token punctuation">)</span></span>
<span class="line">train_df<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># %% [markdown]</span></span>
<span class="line"><span class="token comment"># # 有无缺陷划分</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># %%</span></span>
<span class="line">idx_no_defect <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line">idx_defect <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">for</span> col <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>train_df<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    img_names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;_&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> train_df<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span>col<span class="token punctuation">:</span>col<span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">]</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token keyword">not</span> <span class="token punctuation">(</span>img_names<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> img_names<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> img_names<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">==</span> img_names<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">raise</span> ValueError</span>
<span class="line">        </span>
<span class="line">    labels <span class="token operator">=</span> train_df<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span>col<span class="token punctuation">:</span>col<span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span></span>
<span class="line">    <span class="token keyword">if</span> labels<span class="token punctuation">.</span>isna<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        idx_no_defect<span class="token punctuation">.</span>append<span class="token punctuation">(</span>col<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">        idx_defect<span class="token punctuation">.</span>append<span class="token punctuation">(</span>col<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># %% [markdown]</span></span>
<span class="line"><span class="token comment"># # 标注掩码处理函数</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># %%</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">name_and_mask</span><span class="token punctuation">(</span>start_idx<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    col <span class="token operator">=</span> start_idx</span>
<span class="line">    img_names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;_&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> train_df<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span>col<span class="token punctuation">:</span>col<span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">]</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token keyword">not</span> <span class="token punctuation">(</span>img_names<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> img_names<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> img_names<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">==</span> img_names<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">raise</span> ValueError</span>
<span class="line"></span>
<span class="line">    labels <span class="token operator">=</span> train_df<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span>col<span class="token punctuation">:</span>col<span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span></span>
<span class="line">    mask <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">,</span> <span class="token number">1600</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>np<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">for</span> idx<span class="token punctuation">,</span> label <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>labels<span class="token punctuation">.</span>values<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">if</span> label <span class="token keyword">is</span> <span class="token keyword">not</span> np<span class="token punctuation">.</span>nan<span class="token punctuation">:</span></span>
<span class="line">            mask_label <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token number">1600</span><span class="token operator">*</span><span class="token number">256</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>np<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span></span>
<span class="line">            label <span class="token operator">=</span> label<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span></span>
<span class="line">            positions <span class="token operator">=</span> <span class="token builtin">map</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> label<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">            length <span class="token operator">=</span> <span class="token builtin">map</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> label<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">for</span> pos<span class="token punctuation">,</span> le <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>positions<span class="token punctuation">,</span> length<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">                mask_label<span class="token punctuation">[</span>pos<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>pos<span class="token operator">+</span>le<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span></span>
<span class="line">            mask<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> idx<span class="token punctuation">]</span> <span class="token operator">=</span> mask_label<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">,</span> <span class="token number">1600</span><span class="token punctuation">,</span> order<span class="token operator">=</span><span class="token string">&#39;F&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">return</span> img_names<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> mask</span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">mask_to_rle</span><span class="token punctuation">(</span>mask<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&#39;&#39;&#39;</span>
<span class="line">    Convert a mask into RLE</span>
<span class="line">    </span>
<span class="line">    Parameters: </span>
<span class="line">    mask (numpy.array): binary mask of numpy array where 1 - mask, 0 - background</span>
<span class="line"></span>
<span class="line">    Returns: </span>
<span class="line">    sring: run length encoding </span>
<span class="line">    &#39;&#39;&#39;</span></span>
<span class="line">    pixels<span class="token operator">=</span> mask<span class="token punctuation">.</span>T<span class="token punctuation">.</span>flatten<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#转置之后再flatten同上</span></span>
<span class="line">    pixels <span class="token operator">=</span> np<span class="token punctuation">.</span>concatenate<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> pixels<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#加0是为了后面错位-</span></span>
<span class="line">    runs <span class="token operator">=</span> np<span class="token punctuation">.</span>where<span class="token punctuation">(</span>pixels<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">!=</span> pixels<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token comment">#这里要+1</span></span>
<span class="line">    <span class="token comment">#其实就是再计算后面位置和前面位置的值相等；不等就输出索引号+1</span></span>
<span class="line">    runs<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">-=</span> runs<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span></span>
<span class="line">    <span class="token comment">#每一个不相等索引号相减，后一个-前一个就是长度</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token string">&#39; &#39;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token keyword">for</span> x <span class="token keyword">in</span> runs<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">#主要生成mask，根据rle_string(这玩意就是上面的EncodedPixels，图像标签)</span></span>
<span class="line"><span class="token comment"># from https://www.kaggle.com/robertkag/rle-to-mask-converter</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">rle_to_mask</span><span class="token punctuation">(</span>rle_string<span class="token punctuation">,</span>height<span class="token punctuation">,</span>width<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&#39;&#39;&#39;</span>
<span class="line">    convert RLE(run length encoding) string to numpy array</span>
<span class="line"></span>
<span class="line">    Parameters: </span>
<span class="line">    rleString (str): Description of arg1 </span>
<span class="line">    height (int): height of the mask</span>
<span class="line">    width (int): width of the mask </span>
<span class="line"></span>
<span class="line">    Returns: </span>
<span class="line">    numpy.array: numpy array of the mask</span>
<span class="line">    &#39;&#39;&#39;</span></span>
<span class="line">    rows<span class="token punctuation">,</span> cols <span class="token operator">=</span> height<span class="token punctuation">,</span> width</span>
<span class="line">    <span class="token keyword">if</span> rle_string <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span>height<span class="token punctuation">,</span> width<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    rleNumbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">(</span>numstring<span class="token punctuation">)</span> <span class="token keyword">for</span> numstring <span class="token keyword">in</span> rle_string<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span></span>
<span class="line">    <span class="token comment">#变换为多列格式(像素位置，长度)</span></span>
<span class="line">    rlePairs <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>rleNumbers<span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line">    img <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span>rows<span class="token operator">*</span>cols<span class="token punctuation">,</span>dtype<span class="token operator">=</span>np<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span></span>
<span class="line">    <span class="token comment">#创建mask，此时还是一行</span></span>
<span class="line">    <span class="token keyword">for</span> index<span class="token punctuation">,</span>length <span class="token keyword">in</span> rlePairs<span class="token punctuation">:</span></span>
<span class="line">        index <span class="token operator">-=</span> <span class="token number">1</span></span>
<span class="line">        img<span class="token punctuation">[</span>index<span class="token punctuation">:</span>index<span class="token operator">+</span>length<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">255</span></span>
<span class="line">    <span class="token comment">#以上画竖线，给出的+1了</span></span>
<span class="line">    img <span class="token operator">=</span> img<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>cols<span class="token punctuation">,</span>rows<span class="token punctuation">)</span><span class="token comment">#因为画的是竖线，所以cols为行</span></span>
<span class="line">    <span class="token keyword">return</span> img<span class="token punctuation">.</span>T</span>
<span class="line"></span>
<span class="line"><span class="token comment"># %% [markdown]</span></span>
<span class="line"><span class="token comment"># # 生成数据集</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># %%</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">get_dataset</span><span class="token punctuation">(</span>idxs<span class="token punctuation">,</span> src_img_path<span class="token punctuation">,</span> dst_img_path<span class="token punctuation">,</span> json_file<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># 添加类别定义</span></span>
<span class="line">    categories <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;class1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;supercategory&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token punctuation">{</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;class2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;supercategory&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token punctuation">{</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;class3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;supercategory&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token punctuation">{</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;class4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;supercategory&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">}</span><span class="token punctuation">]</span></span>
<span class="line">    coco_dataset <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token string">&#39;licenses&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&#39;images&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&#39;annotations&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&#39;info&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token string">&#39;year&#39;</span><span class="token punctuation">:</span> <span class="token number">2023</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string">&#39;version&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;1.0&#39;</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string">&#39;description&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;COCO dataset for instance segmentation&#39;</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string">&#39;contributor&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Your Name&#39;</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string">&#39;url&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;https://yourwebsite.com&#39;</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string">&#39;date_created&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;2023-04-06&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&#39;categories&#39;</span><span class="token punctuation">:</span> categories<span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment"># 遍历图像文件，并添加图像信息和标注信息</span></span>
<span class="line">    <span class="token keyword">for</span> col <span class="token keyword">in</span> idxs<span class="token punctuation">:</span></span>
<span class="line">        img_names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;_&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> train_df<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span>col<span class="token punctuation">:</span>col<span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">]</span></span>
<span class="line">        <span class="token comment"># 添加图像信息</span></span>
<span class="line">        img_id <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>coco_dataset<span class="token punctuation">[</span><span class="token string">&#39;images&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span></span>
<span class="line">        img_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token string">&#39;train_images&#39;</span><span class="token punctuation">,</span> img_names<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">        img <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>img_path<span class="token punctuation">)</span></span>
<span class="line">        img_width<span class="token punctuation">,</span> img_height <span class="token operator">=</span> img<span class="token punctuation">.</span>size</span>
<span class="line">        img_info <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token string">&#39;id&#39;</span><span class="token punctuation">:</span> img_id<span class="token punctuation">,</span></span>
<span class="line">            <span class="token string">&#39;file_name&#39;</span><span class="token punctuation">:</span> img_names<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string">&#39;width&#39;</span><span class="token punctuation">:</span> img_width<span class="token punctuation">,</span></span>
<span class="line">            <span class="token string">&#39;height&#39;</span><span class="token punctuation">:</span> img_height<span class="token punctuation">,</span></span>
<span class="line">            <span class="token string">&#39;license&#39;</span><span class="token punctuation">:</span> <span class="token boolean">None</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string">&#39;flickr_url&#39;</span><span class="token punctuation">:</span> <span class="token boolean">None</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string">&#39;coco_url&#39;</span><span class="token punctuation">:</span> <span class="token boolean">None</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string">&#39;date_captured&#39;</span><span class="token punctuation">:</span> <span class="token boolean">None</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        coco_dataset<span class="token punctuation">[</span><span class="token string">&#39;images&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>img_info<span class="token punctuation">)</span></span>
<span class="line">        name<span class="token punctuation">,</span> mask <span class="token operator">=</span> name_and_mask<span class="token punctuation">(</span>col<span class="token punctuation">)</span></span>
<span class="line">        </span>
<span class="line">        shutil<span class="token punctuation">.</span>copy<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>src_img_path<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">,</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>dst_img_path<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        </span>
<span class="line">        <span class="token keyword">for</span> ch <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">            contours<span class="token punctuation">,</span> _ <span class="token operator">=</span> cv2<span class="token punctuation">.</span>findContours<span class="token punctuation">(</span>mask<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> ch<span class="token punctuation">]</span><span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>RETR_EXTERNAL<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>CHAIN_APPROX_NONE<span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">for</span> contour <span class="token keyword">in</span> contours<span class="token punctuation">:</span></span>
<span class="line">                x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> w<span class="token punctuation">,</span> h <span class="token operator">=</span> cv2<span class="token punctuation">.</span>boundingRect<span class="token punctuation">(</span>contour<span class="token punctuation">)</span></span>
<span class="line">                polygon <span class="token operator">=</span> contour<span class="token punctuation">.</span>squeeze<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>tolist<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                polygon<span class="token punctuation">.</span>append<span class="token punctuation">(</span>polygon<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># 添加首尾闭合</span></span>
<span class="line">                polygon <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>polygon<span class="token punctuation">)</span></span>
<span class="line">                polygon <span class="token operator">=</span> polygon<span class="token punctuation">.</span>flatten<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>tolist<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                ann_id <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>coco_dataset<span class="token punctuation">[</span><span class="token string">&#39;annotations&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span></span>
<span class="line">                ann_info <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token string">&#39;id&#39;</span><span class="token punctuation">:</span> ann_id<span class="token punctuation">,</span></span>
<span class="line">                    <span class="token string">&#39;image_id&#39;</span><span class="token punctuation">:</span> img_id<span class="token punctuation">,</span></span>
<span class="line">                    <span class="token string">&#39;category_id&#39;</span><span class="token punctuation">:</span> ch<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">                    <span class="token string">&#39;segmentation&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>polygon<span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">                    <span class="token string">&#39;bbox&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> w<span class="token punctuation">,</span> h<span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">                    <span class="token string">&#39;area&#39;</span><span class="token punctuation">:</span> w <span class="token operator">*</span> h<span class="token punctuation">,</span></span>
<span class="line">                    <span class="token string">&#39;iscrowd&#39;</span><span class="token punctuation">:</span> <span class="token number">0</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">                coco_dataset<span class="token punctuation">[</span><span class="token string">&#39;annotations&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>ann_info<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>json_file<span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">        json<span class="token punctuation">.</span>dump<span class="token punctuation">(</span>coco_dataset<span class="token punctuation">,</span> f<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># %%</span></span>
<span class="line"><span class="token comment"># 定义数据集的根目录</span></span>
<span class="line">dataset_dir <span class="token operator">=</span> <span class="token string">&#39;Severstal&#39;</span></span>
<span class="line"><span class="token comment"># 创建保存训练集、验证集和测试集的目录</span></span>
<span class="line">annotations_dir <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>dataset_dir<span class="token punctuation">,</span> <span class="token string">&#39;annotations&#39;</span><span class="token punctuation">)</span></span>
<span class="line">train_dir_all <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>dataset_dir<span class="token punctuation">,</span> <span class="token string">&#39;train2017all&#39;</span><span class="token punctuation">)</span></span>
<span class="line">train_dir <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>dataset_dir<span class="token punctuation">,</span> <span class="token string">&#39;train2017&#39;</span><span class="token punctuation">)</span></span>
<span class="line">val_dir <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>dataset_dir<span class="token punctuation">,</span> <span class="token string">&#39;val2017&#39;</span><span class="token punctuation">)</span></span>
<span class="line">test_dir <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>dataset_dir<span class="token punctuation">,</span> <span class="token string">&#39;test2017&#39;</span><span class="token punctuation">)</span></span>
<span class="line">train_json_all <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>dataset_dir<span class="token punctuation">,</span> <span class="token string">&#39;annotations&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;instances_train2017all.json&#39;</span><span class="token punctuation">)</span></span>
<span class="line">train_json <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>dataset_dir<span class="token punctuation">,</span> <span class="token string">&#39;annotations&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;instances_train2017.json&#39;</span><span class="token punctuation">)</span></span>
<span class="line">test_json <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>dataset_dir<span class="token punctuation">,</span> <span class="token string">&#39;annotations&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;instances_test2017.json&#39;</span><span class="token punctuation">)</span></span>
<span class="line">val_json <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>dataset_dir<span class="token punctuation">,</span> <span class="token string">&#39;annotations&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;instances_val2017.json&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">folders <span class="token operator">=</span> <span class="token punctuation">[</span>annotations_dir<span class="token punctuation">,</span> train_dir_all<span class="token punctuation">,</span> train_dir<span class="token punctuation">,</span> val_dir<span class="token punctuation">,</span> test_dir<span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">for</span> f <span class="token keyword">in</span> folders<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        shutil<span class="token punctuation">.</span>rmtree<span class="token punctuation">(</span>f<span class="token punctuation">)</span></span>
<span class="line">    os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>f<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 划分训练测试</span></span>
<span class="line">test_ratio <span class="token operator">=</span> <span class="token number">0.1</span></span>
<span class="line"></span>
<span class="line">random<span class="token punctuation">.</span>shuffle<span class="token punctuation">(</span>idx_defect<span class="token punctuation">)</span></span>
<span class="line">num_test <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>idx_defect<span class="token punctuation">)</span> <span class="token operator">*</span> test_ratio<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">test_images_idx <span class="token operator">=</span> idx_defect<span class="token punctuation">[</span><span class="token punctuation">:</span>num_test<span class="token punctuation">]</span></span>
<span class="line">train_images_idx_all <span class="token operator">=</span> idx_defect<span class="token punctuation">[</span>num_test<span class="token punctuation">:</span><span class="token punctuation">]</span></span>
<span class="line">val_images_idx <span class="token operator">=</span> idx_defect<span class="token punctuation">[</span>num_test<span class="token punctuation">:</span>num_test<span class="token operator">*</span><span class="token number">3</span><span class="token punctuation">]</span></span>
<span class="line">train_images_idx <span class="token operator">=</span> idx_defect<span class="token punctuation">[</span>num_test<span class="token operator">*</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line">get_dataset<span class="token punctuation">(</span>test_images_idx<span class="token punctuation">,</span> <span class="token string">&#39;train_images&#39;</span><span class="token punctuation">,</span> test_dir<span class="token punctuation">,</span> test_json<span class="token punctuation">)</span></span>
<span class="line">get_dataset<span class="token punctuation">(</span>train_images_idx_all<span class="token punctuation">,</span> <span class="token string">&#39;train_images&#39;</span><span class="token punctuation">,</span> train_dir_all<span class="token punctuation">,</span> train_json_all<span class="token punctuation">)</span></span>
<span class="line">get_dataset<span class="token punctuation">(</span>train_images_idx<span class="token punctuation">,</span> <span class="token string">&#39;train_images&#39;</span><span class="token punctuation">,</span> train_dir<span class="token punctuation">,</span> train_json<span class="token punctuation">)</span></span>
<span class="line">get_dataset<span class="token punctuation">(</span>val_images_idx<span class="token punctuation">,</span> <span class="token string">&#39;train_images&#39;</span><span class="token punctuation">,</span> val_dir<span class="token punctuation">,</span> val_json<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2))])}const v=t(u,[["render",r],["__file","36f9f8ee-2e68-401f-8c7f-ab2f256cb3ee.html.vue"]]),b=JSON.parse('{"path":"/36f9f8ee-2e68-401f-8c7f-ab2f256cb3ee.html","title":"Severstal 数据集转成coco格式","lang":"en-US","frontmatter":{"title":"Severstal 数据集转成coco格式","date":"2023/04/02","permalink":"/36f9f8ee-2e68-401f-8c7f-ab2f256cb3ee.html","categories":["posts"],"tags":["posts"]},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"代码","slug":"代码","link":"#代码","children":[]}],"git":{"createdTime":1732191603000,"updatedTime":1732191603000,"contributors":[{"name":"Ghlerrix","email":"Ghlerrix@outlook.com","commits":1}]},"filePathRelative":"blogs/posts/Severstal 数据集转成coco格式.md"}');export{v as comp,b as data};

import{_ as s,c as a,e as p,o as t}from"./app-DVyU65El.js";const o={};function e(c,n){return t(),a("div",null,n[0]||(n[0]=[p(`<h2 id="coco数据集可视化" tabindex="-1"><a class="header-anchor" href="#coco数据集可视化"><span><strong>COCO数据集可视化</strong></span></a></h2><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">import</span> json</span>
<span class="line"><span class="token keyword">import</span> os</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> cv2</span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">CocoDataVisualization</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> imgPath<span class="token punctuation">,</span> jsonPath<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        self<span class="token punctuation">.</span>imgPath <span class="token operator">=</span> imgPath</span>
<span class="line">        self<span class="token punctuation">.</span>jsonPath <span class="token operator">=</span> jsonPath</span>
<span class="line"></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">visualize</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> out<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> thickness<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>jsonPath<span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">            annotation_json <span class="token operator">=</span> json<span class="token punctuation">.</span>load<span class="token punctuation">(</span>f<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">for</span> img <span class="token keyword">in</span> annotation_json<span class="token punctuation">[</span><span class="token string">&#39;images&#39;</span><span class="token punctuation">]</span><span class="token punctuation">:</span></span>
<span class="line">            image_name <span class="token operator">=</span> img<span class="token punctuation">[</span><span class="token string">&#39;file_name&#39;</span><span class="token punctuation">]</span>  <span class="token comment"># 读取图片名</span></span>
<span class="line">            <span class="token builtin">id</span> <span class="token operator">=</span> img<span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">]</span>  <span class="token comment"># 读取图片id</span></span>
<span class="line">            image_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>self<span class="token punctuation">.</span>imgPath<span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>image_name<span class="token punctuation">)</span><span class="token punctuation">.</span>zfill<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 拼接图像路径</span></span>
<span class="line">            image <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span>image_path<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>  <span class="token comment"># 保持原始格式的方式读取图像</span></span>
<span class="line">            num_bbox <span class="token operator">=</span> <span class="token number">0</span>  <span class="token comment"># 统计一幅图片中bbox的数量</span></span>
<span class="line"></span>
<span class="line">            <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>annotation_json<span class="token punctuation">[</span><span class="token string">&#39;annotations&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">                <span class="token keyword">if</span> annotation_json<span class="token punctuation">[</span><span class="token string">&#39;annotations&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;image_id&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token builtin">id</span><span class="token punctuation">:</span></span>
<span class="line">                    num_bbox <span class="token operator">=</span> num_bbox <span class="token operator">+</span> <span class="token number">1</span></span>
<span class="line">                    x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> w<span class="token punctuation">,</span> h <span class="token operator">=</span> annotation_json<span class="token punctuation">[</span><span class="token string">&#39;annotations&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;bbox&#39;</span><span class="token punctuation">]</span>  <span class="token comment"># 读取边框</span></span>
<span class="line">                    image <span class="token operator">=</span> cv2<span class="token punctuation">.</span>rectangle<span class="token punctuation">(</span>image<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>x <span class="token operator">+</span> w<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>y <span class="token operator">+</span> h<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> color<span class="token operator">=</span>color<span class="token punctuation">,</span></span>
<span class="line">                                          thickness<span class="token operator">=</span>thickness<span class="token punctuation">)</span></span>
<span class="line">            cv2<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>out<span class="token punctuation">,</span> image_name<span class="token punctuation">)</span><span class="token punctuation">,</span> image<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># the first param is the directory&#39;s path of images</span></span>
<span class="line">    <span class="token comment"># the second param is the path of json file</span></span>
<span class="line">    d <span class="token operator">=</span> CocoDataVisualization<span class="token punctuation">(</span><span class="token string">&#39;/home/lgh/code/mmdetection/data/NEU_DET/coco/train2017&#39;</span><span class="token punctuation">,</span></span>
<span class="line">                              <span class="token string">&#39;/home/lgh/code/mmdetection/data/NEU_DET/coco/annotations/instances_train2017.json&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment"># this param is the output path</span></span>
<span class="line">    d<span class="token punctuation">.</span>visualize<span class="token punctuation">(</span><span class="token string">&#39;./out&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="voc数据集可视化" tabindex="-1"><a class="header-anchor" href="#voc数据集可视化"><span><strong>VOC数据集可视化</strong></span></a></h2><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">from</span> gettext <span class="token keyword">import</span> find</span>
<span class="line"><span class="token keyword">import</span> os</span>
<span class="line"><span class="token keyword">from</span> xml<span class="token punctuation">.</span>etree <span class="token keyword">import</span> ElementTree <span class="token keyword">as</span> ET</span>
<span class="line"><span class="token keyword">import</span> cv2</span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">drawBoxOnVOC</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> xml<span class="token punctuation">,</span> out<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line"></span>
<span class="line">    per<span class="token operator">=</span>ET<span class="token punctuation">.</span>parse<span class="token punctuation">(</span>xml<span class="token punctuation">)</span></span>
<span class="line">    image <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span>img<span class="token punctuation">)</span></span>
<span class="line">    imgName <span class="token operator">=</span> img<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span></span>
<span class="line">    root <span class="token operator">=</span> per<span class="token punctuation">.</span>getroot<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    p<span class="token operator">=</span>root<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">for</span> oneper <span class="token keyword">in</span> p<span class="token punctuation">:</span></span>
<span class="line">        <span class="token comment"># print(oneper.find(&#39;name&#39;).text)</span></span>
<span class="line">        bndbox <span class="token operator">=</span> oneper<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&#39;bndbox&#39;</span><span class="token punctuation">)</span></span>
<span class="line">        x1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>bndbox<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&#39;xmin&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">)</span></span>
<span class="line">        y1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>bndbox<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&#39;ymin&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">)</span></span>
<span class="line">        x2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>bndbox<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&#39;xmax&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">)</span></span>
<span class="line">        y2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>bndbox<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&#39;ymax&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">)</span></span>
<span class="line">        <span class="token comment"># 各参数依次是：图片，添加的文字，左上角坐标(整数)，字体，字体大小，颜色，字体粗细</span></span>
<span class="line">        <span class="token comment"># cv2.putText(img, oneper.find(&#39;name&#39;).text, (x1, y1), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 255, 0), 1)</span></span>
<span class="line">        image <span class="token operator">=</span> cv2<span class="token punctuation">.</span>rectangle<span class="token punctuation">(</span>image<span class="token punctuation">,</span> <span class="token punctuation">(</span>x1<span class="token punctuation">,</span> y1<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>x2<span class="token punctuation">,</span> y2<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line">    cv2<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>out<span class="token punctuation">,</span> imgName<span class="token punctuation">)</span><span class="token punctuation">,</span> image<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">rootPath <span class="token operator">=</span> <span class="token string">&#39;data/images&#39;</span></span>
<span class="line">imgList <span class="token operator">=</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>rootPath<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">for</span> imgName <span class="token keyword">in</span> imgList<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>imgName<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">(</span>name<span class="token punctuation">,</span> ex<span class="token punctuation">)</span> <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>imgName<span class="token punctuation">)</span></span>
<span class="line">    img <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>rootPath<span class="token punctuation">,</span> imgName<span class="token punctuation">)</span></span>
<span class="line">    xml <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token string">&#39;data/xml&#39;</span><span class="token punctuation">,</span> name <span class="token operator">+</span> <span class="token string">&#39;.xml&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    drawBoxOnVOC<span class="token punctuation">(</span>img<span class="token punctuation">,</span> xml<span class="token punctuation">,</span> <span class="token string">&#39;dataOut&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4)]))}const i=s(o,[["render",e],["__file","a20a6b.html.vue"]]),u=JSON.parse('{"path":"/pages/a20a6b.html","title":"数据集可视化","lang":"en-US","frontmatter":{"title":"数据集可视化","date":"2022/05/12","permalink":"/pages/a20a6b.html","categories":["posts"],"tags":["posts"]},"headers":[{"level":2,"title":"COCO数据集可视化","slug":"coco数据集可视化","link":"#coco数据集可视化","children":[]},{"level":2,"title":"VOC数据集可视化","slug":"voc数据集可视化","link":"#voc数据集可视化","children":[]}],"git":{"createdTime":1732191603000,"updatedTime":1732191603000,"contributors":[{"name":"Ghlerrix","email":"Ghlerrix@outlook.com","commits":1}]},"filePathRelative":"blogs/posts/数据集可视化.md"}');export{i as comp,u as data};
